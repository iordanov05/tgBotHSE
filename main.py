import telebot
from telebot import types
import os
from dotenv import load_dotenv
import logging
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import time
import traceback
import re
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger()

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()
# –ü–æ–ª—É—á–µ–Ω–∏–µ API —Ç–æ–∫–µ–Ω–∞ Telegram –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ä–µ–¥—ã
API_TOKEN = os.getenv('TELEGRAM_API_TOKEN')
# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ —É—á–µ—Ç–Ω—ã–º –¥–∞–Ω–Ω—ã–º Google Sheets –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ä–µ–¥—ã
GOOGLE_SHEETS_CREDENTIALS = os.getenv('GOOGLE_SHEETS_CREDENTIALS')
# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ Google Sheets –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ä–µ–¥—ã
GOOGLE_SHEETS_NAME = os.getenv('GOOGLE_SHEETS_NAME')
GOOGLE_SHEETS_US = os.getenv('GOOGLE_SHEETS_US')


bot = telebot.TeleBot(API_TOKEN)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name(GOOGLE_SHEETS_CREDENTIALS, scope)
client = gspread.authorize(creds)

sheet_U = client.open(GOOGLE_SHEETS_US).worksheet('Users')
sheet_S = client.open(GOOGLE_SHEETS_US).worksheet('smart_guys')
# –û—Ç–∫—Ä—ã—Ç–∏–µ –ª–∏—Å—Ç–∞ "A"
sheet_A = client.open(GOOGLE_SHEETS_NAME).worksheet('A')
# –û—Ç–∫—Ä—ã—Ç–∏–µ –ª–∏—Å—Ç–∞ "B"
sheet_B = client.open(GOOGLE_SHEETS_NAME).worksheet('B')
# –û—Ç–∫—Ä—ã—Ç–∏–µ –ª–∏—Å—Ç–∞ "C"
sheet_C = client.open(GOOGLE_SHEETS_NAME).worksheet('C')

def check_room_format(string):
    pattern = r'^[a-c]((0[1-9])|(1[0-9])|(2[0-5]))[1-4]\(\d{1,4}\)$' 
    if re.match(pattern, string):
        return True
    else:
        return False
    
@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = message.chat.id
    telegram_profile = f"https://t.me/{message.chat.username}"
    try:
        sheet_U.append_row([telegram_profile])
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Google Sheets: {e}")
    welcome_text = (
         f" –ü—Ä–∏–≤–µ—Ç! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º –≤ –ù–ò–£ –í–®–≠! –ï—Å–ª–∏ —Ç–µ–±–µ –ø—Ä–∏—à–ª–æ –ø–∏—Å—å–º–æ –æ —Ä–∞—Å—Å–µ–ª–µ–Ω–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–º –≥–æ–≤–æ—Ä–∏—Ç—Å—è, —á—Ç–æ —Ç—ã –±—É–¥–µ—à—å –ø—Ä–æ–∂–∏–≤–∞—Ç—å –≤ –û–±—â–µ–∂–∏—Ç–∏–∏ ‚Ññ8 '–¢—Ä–∏–ª–∏—Å—Ç–Ω–∏–∫', —è –º–æ–≥—É –ø–æ–º–æ—á—å —É–∑–Ω–∞—Ç—å, –≤ –∫–∞–∫–æ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ –∏ –∫–æ–º–Ω–∞—Ç–µ –∏–º–µ–Ω–Ω–æ —Ç—ã –±—É–¥–µ—à—å –∂–∏—Ç—å. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç—ã —Ç–æ—á–Ω–æ —Ç–∞–∫, –∫–∞–∫ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –ø–æ–ª—É—á–∏–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, <b>B000(0)</b>), –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –≤—Å–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏.  "
    )
    bot.send_message(chat_id, welcome_text,parse_mode='html')
    bot.register_next_step_handler(message, room_definition)

@bot.message_handler(content_types=['text', 'photo', 'audio', 'document', 'sticker', 'video', 'voice', 'video_note', 'location', 'contact', 'new_chat_members', 'left_chat_member', 'new_chat_title', 'new_chat_photo', 'delete_chat_photo', 'group_chat_created', 'supergroup_chat_created', 'channel_chat_created', 'migrate_to_chat_id', 'migrate_from_chat_id', 'pinned_message'])
def handle_message(message):
    telegram_profile = f"https://t.me/{message.chat.username}"
    user_input = message.text.lower() if message.text else None
    if check_room_format(user_input):
        room_definition(message)
    elif user_input in ["b000(0)", "a000(0)", "c000(0)"]:
        bot.send_photo(message.chat.id, photo=open('mem.jpg', 'rb'), caption="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –ø–æ–ª—É—á–∏–ª–∏, –∏ —É–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã.")
        try:
            sheet_S.append_row([telegram_profile])
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Google Sheets: {e}")
    else:
        correct_input(message)
 
 
def correct_input(message):
    bot.send_message(message.chat.id, 
         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –º–Ω–µ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç—ã —Ç–æ—á–Ω–æ —Ç–∞–∫, –∫–∞–∫ –æ–Ω —É–∫–∞–∑–∞–Ω –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, <b>B000(0)</b>), –∏ —è —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –≤–∞–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏.",
         parse_mode='html'
         )
    bot.register_next_step_handler(message,room_definition)       
def room_definition(message):
    telegram_profile = f"https://t.me/{message.chat.username}"
    if message.text.lower() in ["b000(0)", "a000(0)", "c000(0)"]:
        bot.send_photo(message.chat.id, photo=open('memi-klev-club-m9ei-p-memi-samii-umnii-chelovek-28.jpg', 'rb'), caption="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –ø–æ–ª—É—á–∏–ª–∏, –∏ —É–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã.")
        try:
            sheet_S.append_row([telegram_profile])
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Google Sheets: {e}")
    elif (len(message.text) == 7 and check_room_format(message.text.lower())):
        try:    
            letter = message.text.lower()[0]
            storey = int(message.text.lower()[1:3])
            apartment = int(message.text.lower()[3])
            room = int(message.text.lower()[5])
            if letter == 'a':
                sheet = sheet_A
            elif letter == 'b':
                sheet = sheet_B
            elif letter == 'c':
                sheet = sheet_C
            rooms = sheet.col_values(int(apartment))[1:]
            room_info = f"–í –∫–≤–∞—Ä—Ç–∏—Ä–µ –µ—Å—Ç—å {len(rooms)} –∫–æ–º–Ω–∞—Ç—ã:\n"
            room_info += ';\n'.join([f"‚Ä¢ –∫–æ–º–Ω–∞—Ç–∞ –¥–ª—è {num} —á–µ–ª–æ–≤–µ–∫" for num in rooms])
            room_info += ".\n"
            if not '2-3' in rooms:
                total_capacity = sum(int(capacity) for capacity in rooms)
                room_capacity = rooms[room-1]
            else:
                room_capacity = rooms[room-1]
                rooms[0]='2'
                total_capacity = sum(int(capacity) for capacity in rooms)
                total_capacity = f"{total_capacity}-{total_capacity+1}"
            
            # logger.info(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}: {message.text}")
            # logger.info(f"–ù–∞–π–¥–µ–Ω –ª–∏—Å—Ç Google Sheets –¥–ª—è –±—É–∫–≤—ã {letter}: {sheet}")
            # logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–≤–∞—Ä—Ç–∏—Ä–µ: –∫–æ—Ä–ø—É—Å {letter.upper()}, —ç—Ç–∞–∂ {storey}, –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–æ–º–µ—Ä {apartment}")
            # logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–Ω–∞—Ç–∞—Ö –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ: {room_info}")
            # logger.info(f"–û–±—â–∞—è –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã: {total_capacity}")
            # logger.info(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–Ω–∞—Ç–µ: –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã {room}, –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å {room_capacity} —á–µ–ª–æ–≤–µ–∫")

            answer = (
                f'''–¢—ã –±—É–¥–µ—à—å –∂–∏—Ç—å –≤ –∫–æ—Ä–ø—É—Å–µ {letter.upper()} –Ω–∞ {storey} —ç—Ç–∞–∂–µ, –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ –Ω–æ–º–µ—Ä {apartment}.\n\n{room_info}\n–í—Å–µ–≥–æ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ –±—É–¥—É—Ç –∂–∏—Ç—å {total_capacity} —á–µ–ª–æ–≤–µ–∫.\n\n–¢–≤–æ—è –∫–æ–º–Ω–∞—Ç–∞ ‚Äî –Ω–æ–º–µ—Ä {room}, —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è –Ω–∞ {room_capacity} —á–µ–ª–æ–≤–µ–∫. \n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∏ –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! üè°üòä
                ''')
            bot.send_message(message.chat.id,answer,parse_mode='html' )
        except Exception as e:
            logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            logger.error(traceback.format_exc())
            correct_input(message)
    else:
        correct_input(message)
        
        
if __name__ == '__main__':
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
    bot_info = bot.get_me()
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
    logger.info(f"Connected bot: {bot_info.first_name} [@{bot_info.username}]")
    while True:
        try:
            logger.info("Starting bot polling...")
            bot.polling(none_stop=True, timeout=60)
        except Exception as e:
            logger.error(f"Error occurred: {e}")
            logger.info("Restarting bot in 10 seconds...")
            time.sleep(10)